<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "generic-entities.ent">
    %entities;
]>

<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="cha-security-attestation">
  <info>
    <title>Remote attestation using Keylime</title>
  </info>
  <abstract>
   <para>
    This chapter focuses on remote attestation of &slema; using the <emphasis>keylime</emphasis> agent.
   </para>
  </abstract>
  <para>
    With the growing demand on securing devices against unauthorized changes, usage of the security mechanism called <emphasis>remote attestation (RA)</emphasis> has been experiencing significant growth. Using RA a host (client) can authenticate it's hardware and software configuration on a remote host (server). <emphasis>remote attestation</emphasis> is usually combined with public-key encryption, thus the sent information can only be read by the programs that requested the attestation.
  </para>
  <para>
    Throughout this document, the following terms are used:
  </para>

  <variablelist>
    <title>Terminology</title>
    <varlistentry>
      <term>core root of trust for measurement</term>
      <listitem>
        <para>
          is a starting point of the boot process that cannot be altered and calculates the first hash of the layer above.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>integrity management architecture (IMA)</term>
      <listitem>
        <para>
          the kernel integrity subsytem that provides a means of detecting malicious changes to files.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
    <term>measured boot</term>
        <listitem>
          <para>
            in this method each software in the booting sequence is checked by the layer below. A hash based on the disk or memory content is calculated for each layer and the hash is compared to a value in PCR.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Platform Configuration Register (PCR)</term>
        <listitem>
          <para>
            is a memory location in TPM that, for example, stores hashes of booting layers. PCR can be signed to return a secure report called attestation.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>secure boot</term>
        <listitem>
          <para>
            each step of the booting process checks a cryptographic signature signature on the executable of the next step before launching it.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Trusted Platform Module (TPM)</term>
        <listitem>
          <para>
            is a self-contained security processor that can be attached to a system bus as a simple peripheral. TPM provides PCR for storing booting layers hashes. A typical TPM can store 24 PCRs, and PCRs can utilize different hash functions at the same time, for ecample, you can use SHA1 and SHA512 simultaneously.
          </para>
        </listitem>
      </varlistentry>
  </variablelist>

<para>
  By default, TPM usage is disabled, therefore, the remote attestation does not take place. To enable the remote attestation, enable TPM in the EFI/BIOS menu.
</para>

<section xml:id="sec-keylime-about">
  <title>About <emphasis>Keylime</emphasis></title>
  <para>
    <emphasis>Keylime</emphasis> is a TPM-based remote attestation solution that enables you to monitor remote nodes using a hadware based cryptographic core root of trust for measurement. <emphasis>Keylime</emphasis> also provides a framework for remote attestation of nay PCR. Using <emphasis>Keylime</emphasis> you can create your own set of actions triggered when a machine fails the attested measurements.
  </para>
  <para>
    <emphasis>Keylime</emphasis> consists of an agent, a verifier, registrar and a command-line tool - tenant. Each component is described in corresponding sections.
  </para>

  <section xml:id="sec-keylime-agent">
    <title><emphasis>Keylime</emphasis> agent</title>
  </section>

  </section>

  <section xml:id="sec-install-keylime">
    <title>Installing <emphasis>Keylime</emphasis></title>
    <para>
      <emphasis>Keylime</emphasis> is not present on &slema; by default, you need to install it manually. To install <emphasis>Keylime</emphasis>, proceed as follows:
    </para>
    <procedure>
      <step>
        <para>
          Install the <literal>rust-keylime</literal> package as follows:
        </para>
        <screen>&prompt.root;transactional-update pkg in rust-keylime</screen>
      </step>
      <step>
        <para>
          Reboot your system.
        </para>
      </step>
    </procedure>
  </section>

  </chapter>
