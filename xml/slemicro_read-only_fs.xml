<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "generic-entities.ent">
    %entities;
]>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="cha-read-only-filesystem" xml:lang="en">
 <title>Read-only file system</title>
 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker></dm:bugtracker>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>
 <para>
  &slema; was designed to use a read-only root file system. This means that
  after the deployment is complete, you are not able to perform direct
  modifications to the root file system, e.g. by using
  <command>zypper</command>. Instead, &slem; introduces the concept of
  transactional updates which enables you to modify your system and keep it up
  to date.
 </para>
 <para>
  The key features of transactional updates are the following:
 </para>
 <itemizedlist>
  <listitem>
   <para>
    They are atomic - the update is applied only if it completes successfully.
   </para>
  </listitem>
  <listitem>
   <para>
    Changes are applied in a separate snapshot and so do not influence the
    running system.
   </para>
  </listitem>
  <listitem>
   <para>
    Changes can easily be rolled back.
   </para>
  </listitem>
 </itemizedlist>
 <para>
  Each time you call the <command>transactional-update</command> command to
  change your system&mdash;either to install a package, perform an update or
  apply a patch&mdash;the following actions take place:
 </para>
 <procedure>
  <title>Modifying the root file system</title>
  <step>
   <para>
    A new read-write snapshot is created from your current root file system, or
    from a snapshot that you specified.
   </para>
  </step>
  <step>
   <para>
    All changes are applied (updates, patches or package installation).
   </para>
  </step>
  <step>
   <para>
    The snapshot is switched back to read-only mode.
   </para>
  </step>
  <step>
   <para>
    The new root file system snapshot is prepared, so that it will be active
    after you reboot.
   </para>
  </step>
  <step>
   <para>
    After rebooting, the new root file system is set as the default snapshot.
   </para>
   <note>
    <para>
     Bear in mind that without rebooting your system, the changes will not be
     applied.
    </para>
   </note>
  </step>
 </procedure>
 <warning>
  <para>
   In case you do not reboot your machine before performing further changes,
   the <command>transactional-update</command> command will create a new
   snapshot from the current root file system. This means that you will end up
   with several parallel snapshots, each including that particular change but
   not changes from the other invocations of the command. After reboot, the
   most recently created snapshot will be used as your new root file system,
   and it will not include changes done in the previous snapshots.
  </para>
 </warning>
</chapter>
